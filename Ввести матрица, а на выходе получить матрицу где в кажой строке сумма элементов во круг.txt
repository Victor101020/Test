Задача:Напишите программу, на вход которой подаётся прямоугольная матрица в виде последовательности строк. После последней строки матрицы идёт строка, содержащая только строку "end" (без кавычек, см. Sample Input).

Программа должна вывести матрицу того же размера, у которой каждый элемент в позиции i, j равен сумме элементов первой матрицы на позициях (i-1, j), (i+1, j), (i, j-1), (i, j+1). У крайних символов соседний элемент находится с противоположной стороны матрицы.

В случае одной строки/столбца элемент сам себе является соседом по соответствующему направлению.

Мое решение:

a,b,c=[],[],[]
while True:           #цикл ввода данных пока не будет введено слово end, причем слово end записывается как [end], пожтому в условии используется индекс
    a=input().split() 
    if a[0]=='end':
        break
    else:
        a=[int(i) for i in a]
        b.append(a)      
#готовая матрица списков до ввода значения end
#Далее создаем матрицу с такой же размерности и заполненую нулями
n,m=len(b),len(b[0])
c=[[0 for j in range(m)] for i in range(n)]   #нулевая матрица размером "n" на "m" т.к. в задаче указано, что на вход подается прямоугольная матрица, то применим ф-ю len
#Далее уже считаем значение каждой ячейки как сумму соседних про формуле, и записываем в таблицу "с"
if len(b)<2 and len(b[0])<2: #условие если матрица имеет одно значение
    print(b[0][0]*4)
else:
    for i in range(len(b)):
        for j in range(len(b[i])):
            c[i][j] = b[i-1][j]+b[(i+1)%len(b)][j]+b[i][j-1]+b[i][(j+1)%len(b[i])]
    for i in range(len(c)):
        for j in range(len(c[i])):
            print(c[i][j], end=' ')
        print()


Лучшее решение:

c = []
while True:
    a = [i for i in input().split()]
    if a == ['end']:
        break
    c.append(a)
n, m = len(c), len(c[0])
for i in range(n):
    for j in range(m):
        x = int(c[i][j-1]) + int(c[i][j+1-m]) + int(c[i-1][j]) + int(c[i+1-n][j])
        print(x, end=' ')
    print()
    